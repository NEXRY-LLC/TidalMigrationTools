//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.12.09 at 11:04:38 AM EST
//

package com.bluehouseinc.dataconverter.parsers.bmc.xml.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import com.bluehouseinc.dataconverter.parsers.bmc.xml.model.modified.RuleBasedCalendar;

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the generated package.
 * <p>
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups. Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
public class ObjectFactory {

	private final static QName _DEFTABLEWORKSPACE_QNAME = new QName("", "WORKSPACE");
	private final static QName _DEFTABLEFOLDER_QNAME = new QName("", "FOLDER");
	private final static QName _DEFTABLESCHEDTABLE_QNAME = new QName("", "SCHED_TABLE");
	private final static QName _DEFTABLETABLE_QNAME = new QName("", "TABLE");
	private final static QName _DEFTABLESMARTFOLDER_QNAME = new QName("", "SMART_FOLDER");
	private final static QName _DEFTABLESMARTTABLE_QNAME = new QName("", "SMART_TABLE");
	private final static QName _DEFTABLESCHEDGROUP_QNAME = new QName("", "SCHED_GROUP");
	private final static QName _SubTableAUTOEDIT2_QNAME = new QName("", "AUTOEDIT2");
	private final static QName _SubTableAUTOEDIT_QNAME = new QName("", "AUTOEDIT");
	private final static QName _SubTableVARIABLE_QNAME = new QName("", "VARIABLE");
	private final static QName _SubTableSHOUT_QNAME = new QName("", "SHOUT");
	private final static QName _SubTableCONTROL_QNAME = new QName("", "CONTROL");
	private final static QName _SubTableINCOND_QNAME = new QName("", "INCOND");
	private final static QName _SubTableQUANTITATIVE_QNAME = new QName("", "QUANTITATIVE");
	private final static QName _SubTableOUTCOND_QNAME = new QName("", "OUTCOND");
	private final static QName _SubTableSTEPRANGE_QNAME = new QName("", "STEP_RANGE");
	private final static QName _SubTableRULEBASEDCALENDAR_QNAME = new QName("", "RULE_BASED_CALENDAR");
	private final static QName _SubTableTAG_QNAME = new QName("", "TAG");
	private final static QName _SubTableRULEBASEDCALENDARS_QNAME = new QName("", "RULE_BASED_CALENDARS");
	private final static QName _SubTableTAGNAMES_QNAME = new QName("", "TAG_NAMES");
	private final static QName _SubTableON_QNAME = new QName("", "ON");
	private final static QName _SubTableONTABLE_QNAME = new QName("", "ON_TABLE");
	private final static QName _SubTableONGROUP_QNAME = new QName("", "ON_GROUP");
	private final static QName _SubTableCAPTURE_QNAME = new QName("", "CAPTURE");
	private final static QName _SubTableJOB_QNAME = new QName("", "JOB");
	private final static QName _SubTableSUBTABLE_QNAME = new QName("", "SUB_TABLE");
	private final static QName _SubFolderSUBFOLDER_QNAME = new QName("", "SUB_FOLDER");
	private final static QName _OnDataDO_QNAME = new QName("", "DO");
	private final static QName _OnDataDOTABLE_QNAME = new QName("", "DO_TABLE");
	private final static QName _OnDataDOGROUP_QNAME = new QName("", "DO_GROUP");
	private final static QName _OnDataDOACTION_QNAME = new QName("", "DOACTION");
	private final static QName _OnDataACTION_QNAME = new QName("", "ACTION");
	private final static QName _OnDataDOCOND_QNAME = new QName("", "DOCOND");
	private final static QName _OnDataDOCTBRULE_QNAME = new QName("", "DOCTBRULE");
	private final static QName _OnDataDOFORCEJOB_QNAME = new QName("", "DOFORCEJOB");
	private final static QName _OnDataDOIFRERUN_QNAME = new QName("", "DOIFRERUN");
	private final static QName _OnDataDOMAIL_QNAME = new QName("", "DOMAIL");
	private final static QName _OnDataDOREMEDY_QNAME = new QName("", "DOREMEDY");
	private final static QName _OnDataDOAUTOEDIT2_QNAME = new QName("", "DOAUTOEDIT2");
	private final static QName _OnDataDOAUTOEDIT_QNAME = new QName("", "DOAUTOEDIT");
	private final static QName _OnDataDOVARIABLE_QNAME = new QName("", "DOVARIABLE");
	private final static QName _OnDataDOSHOUT_QNAME = new QName("", "DOSHOUT");
	private final static QName _OnDataDOOUTPUT_QNAME = new QName("", "DOOUTPUT");
	private final static QName _OnDataDOSYSOUT_QNAME = new QName("", "DOSYSOUT");
	private final static QName _SmartTableADDITIONALFOLDERDETAILS_QNAME = new QName("", "ADDITIONAL_FOLDER_DETAILS");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
	 * generated
	 *
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link DEFTABLE }
	 *
	 */
	public DEFTABLE createDEFTABLE() {
		return new DEFTABLE();
	}

	/**
	 * Create an instance of {@link WorkspaceData }
	 *
	 */
	public WorkspaceData createWorkspaceData() {
		return new WorkspaceData();
	}

	/**
	 * Create an instance of {@link SimpleFolder }
	 *
	 */
	public SimpleFolder createSimpleFolder() {
		return new SimpleFolder();
	}

	/**
	 * Create an instance of {@link SmartFolder }
	 *
	 */
	public SmartFolder createSmartFolder() {
		return new SmartFolder();
	}

	/**
	 * Create an instance of {@link SmartTable }
	 *
	 */
	public SmartTable createSmartTable() {
		return new SmartTable();
	}

	/**
	 * Create an instance of {@link Workspace }
	 *
	 */
	public Workspace createWorkspace() {
		return new Workspace();
	}

	/**
	 * Create an instance of {@link WCMNote }
	 *
	 */
	public WCMNote createWCMNote() {
		return new WCMNote();
	}

	/**
	 * Create an instance of {@link WCMNotesData }
	 *
	 */
	public WCMNotesData createWCMNotesData() {
		return new WCMNotesData();
	}

	/**
	 * Create an instance of {@link JobData }
	 *
	 */
	public JobData createJobData() {
		return new JobData();
	}

	/**
	 * Create an instance of {@link SetVarData }
	 *
	 */
	public SetVarData createSetVarData() {
		return new SetVarData();
	}

	/**
	 * Create an instance of {@link ShoutData }
	 *
	 */
	public ShoutData createShoutData() {
		return new ShoutData();
	}

	/**
	 * Create an instance of {@link ControlResourceData }
	 *
	 */
	public ControlResourceData createControlResourceData() {
		return new ControlResourceData();
	}

	/**
	 * Create an instance of {@link InConditionData }
	 *
	 */
	public InConditionData createInConditionData() {
		return new InConditionData();
	}

	/**
	 * Create an instance of {@link QuantitativeResourceData }
	 *
	 */
	public QuantitativeResourceData createQuantitativeResourceData() {
		return new QuantitativeResourceData();
	}

	/**
	 * Create an instance of {@link OutConditionData }
	 *
	 */
	public OutConditionData createOutConditionData() {
		return new OutConditionData();
	}

	/**
	 * Create an instance of {@link CtbStepData }
	 *
	 */
	public CtbStepData createCtbStepData() {
		return new CtbStepData();
	}

	/**
	 * Create an instance of {@link StepRangeData }
	 *
	 */
	public StepRangeData createStepRangeData() {
		return new StepRangeData();
	}

	/**
	 * Create an instance of {@link TagData }
	 *
	 */
	public TagData createTagData() {
		return new TagData();
	}

	/**
	 * Create an instance of {@link JobTagData }
	 *
	 */
	public JobTagData createJobTagData() {
		return new JobTagData();
	}

	/**
	 * Create an instance of {@link OnData }
	 *
	 */
	public OnData createOnData() {
		return new OnData();
	}

	/**
	 * Create an instance of {@link DoActionData }
	 *
	 */
	public DoActionData createDoActionData() {
		return new DoActionData();
	}

	/**
	 * Create an instance of {@link DoCondData }
	 *
	 */
	public DoCondData createDoCondData() {
		return new DoCondData();
	}

	/**
	 * Create an instance of {@link DoCtbRuleData }
	 *
	 */
	public DoCtbRuleData createDoCtbRuleData() {
		return new DoCtbRuleData();
	}

	/**
	 * Create an instance of {@link DoForceJobData }
	 *
	 */
	public DoForceJobData createDoForceJobData() {
		return new DoForceJobData();
	}

	/**
	 * Create an instance of {@link DoIfRerunData }
	 *
	 */
	public DoIfRerunData createDoIfRerunData() {
		return new DoIfRerunData();
	}

	/**
	 * Create an instance of {@link DoMailData }
	 *
	 */
	public DoMailData createDoMailData() {
		return new DoMailData();
	}

	/**
	 * Create an instance of {@link DoRemedyData }
	 *
	 */
	public DoRemedyData createDoRemedyData() {
		return new DoRemedyData();
	}

	/**
	 * Create an instance of {@link DoSetVarData }
	 *
	 */
	public DoSetVarData createDoSetVarData() {
		return new DoSetVarData();
	}

	/**
	 * Create an instance of {@link DoShoutData }
	 *
	 */
	public DoShoutData createDoShoutData() {
		return new DoShoutData();
	}

	/**
	 * Create an instance of {@link DoSysoutData }
	 *
	 */
	public DoSysoutData createDoSysoutData() {
		return new DoSysoutData();
	}

	/**
	 * Create an instance of {@link CaptureData }
	 *
	 */
	public CaptureData createCaptureData() {
		return new CaptureData();
	}

	/**
	 * Create an instance of {@link ClientData }
	 *
	 */
	public ClientData createClientData() {
		return new ClientData();
	}

	/**
	 * Create an instance of {@link WorkspaceDataList }
	 *
	 */
	public WorkspaceDataList createWorkspaceDataList() {
		return new WorkspaceDataList();
	}

	/**
	 * Create an instance of {@link BusinessField }
	 *
	 */
	public BusinessField createBusinessField() {
		return new BusinessField();
	}

	/**
	 * Create an instance of {@link FolderClientData }
	 *
	 */
	public FolderClientData createFolderClientData() {
		return new FolderClientData();
	}

	/**
	 * Create an instance of {@link SubFolder }
	 *
	 */
	public SubFolder createSubFolder() {
		return new SubFolder();
	}

	/**
	 * Create an instance of {@link SubTable }
	 *
	 */
	public SubTable createSubTable() {
		return new SubTable();
	}

	/**
	 * Create an instance of {@link SetVarDataOld }
	 *
	 */
	public SetVarDataOld createSetVarDataOld() {
		return new SetVarDataOld();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link WorkspaceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link WorkspaceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "WORKSPACE", scope = DEFTABLE.class)
	public JAXBElement<WorkspaceData> createDEFTABLEWORKSPACE(WorkspaceData value) {
		return new JAXBElement<>(_DEFTABLEWORKSPACE_QNAME, WorkspaceData.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleFolder }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SimpleFolder }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "FOLDER", scope = DEFTABLE.class)
	public JAXBElement<SimpleFolder> createDEFTABLEFOLDER(SimpleFolder value) {
		return new JAXBElement<>(_DEFTABLEFOLDER_QNAME, SimpleFolder.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleFolder }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SimpleFolder }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SCHED_TABLE", scope = DEFTABLE.class)
	public JAXBElement<SimpleFolder> createDEFTABLESCHEDTABLE(SimpleFolder value) {
		return new JAXBElement<>(_DEFTABLESCHEDTABLE_QNAME, SimpleFolder.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleFolder }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SimpleFolder }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TABLE", scope = DEFTABLE.class)
	public JAXBElement<SimpleFolder> createDEFTABLETABLE(SimpleFolder value) {
		return new JAXBElement<>(_DEFTABLETABLE_QNAME, SimpleFolder.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SmartFolder }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SmartFolder }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SMART_FOLDER", scope = DEFTABLE.class)
	public JAXBElement<SmartFolder> createDEFTABLESMARTFOLDER(SmartFolder value) {
		return new JAXBElement<>(_DEFTABLESMARTFOLDER_QNAME, SmartFolder.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SmartTable }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SmartTable }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SMART_TABLE", scope = DEFTABLE.class)
	public JAXBElement<SmartTable> createDEFTABLESMARTTABLE(SmartTable value) {
		return new JAXBElement<>(_DEFTABLESMARTTABLE_QNAME, SmartTable.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SmartTable }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SmartTable }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SCHED_GROUP", scope = DEFTABLE.class)
	public JAXBElement<SmartTable> createDEFTABLESCHEDGROUP(SmartTable value) {
		return new JAXBElement<>(_DEFTABLESCHEDGROUP_QNAME, SmartTable.class, DEFTABLE.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT2", scope = SubTable.class)
	public JAXBElement<SetVarData> createSubTableAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_SubTableAUTOEDIT2_QNAME, SetVarData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT", scope = SubTable.class)
	public JAXBElement<SetVarDataOld> createSubTableAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_SubTableAUTOEDIT_QNAME, SetVarDataOld.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "VARIABLE", scope = SubTable.class)
	public JAXBElement<SetVarData> createSubTableVARIABLE(SetVarData value) {
		return new JAXBElement<>(_SubTableVARIABLE_QNAME, SetVarData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SHOUT", scope = SubTable.class)
	public JAXBElement<ShoutData> createSubTableSHOUT(ShoutData value) {
		return new JAXBElement<>(_SubTableSHOUT_QNAME, ShoutData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CONTROL", scope = SubTable.class)
	public JAXBElement<ControlResourceData> createSubTableCONTROL(ControlResourceData value) {
		return new JAXBElement<>(_SubTableCONTROL_QNAME, ControlResourceData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "INCOND", scope = SubTable.class)
	public JAXBElement<InConditionData> createSubTableINCOND(InConditionData value) {
		return new JAXBElement<>(_SubTableINCOND_QNAME, InConditionData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "QUANTITATIVE", scope = SubTable.class)
	public JAXBElement<QuantitativeResourceData> createSubTableQUANTITATIVE(QuantitativeResourceData value) {
		return new JAXBElement<>(_SubTableQUANTITATIVE_QNAME, QuantitativeResourceData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "OUTCOND", scope = SubTable.class)
	public JAXBElement<OutConditionData> createSubTableOUTCOND(OutConditionData value) {
		return new JAXBElement<>(_SubTableOUTCOND_QNAME, OutConditionData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "STEP_RANGE", scope = SubTable.class)
	public JAXBElement<StepRangeData> createSubTableSTEPRANGE(StepRangeData value) {
		return new JAXBElement<>(_SubTableSTEPRANGE_QNAME, StepRangeData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDAR", scope = SubTable.class)
	public JAXBElement<RuleBasedCalendar> createSubTableRULEBASEDCALENDAR(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDAR_QNAME, RuleBasedCalendar.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG", scope = SubTable.class)
	public JAXBElement<TagData> createSubTableTAG(TagData value) {
		return new JAXBElement<>(_SubTableTAG_QNAME, TagData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDARS", scope = SubTable.class)
	public JAXBElement<RuleBasedCalendar> createSubTableRULEBASEDCALENDARS(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDARS_QNAME, RuleBasedCalendar.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG_NAMES", scope = SubTable.class)
	public JAXBElement<JobTagData> createSubTableTAGNAMES(JobTagData value) {
		return new JAXBElement<>(_SubTableTAGNAMES_QNAME, JobTagData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON", scope = SubTable.class)
	public JAXBElement<OnData> createSubTableON(OnData value) {
		return new JAXBElement<>(_SubTableON_QNAME, OnData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_TABLE", scope = SubTable.class)
	public JAXBElement<OnData> createSubTableONTABLE(OnData value) {
		return new JAXBElement<>(_SubTableONTABLE_QNAME, OnData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_GROUP", scope = SubTable.class)
	public JAXBElement<OnData> createSubTableONGROUP(OnData value) {
		return new JAXBElement<>(_SubTableONGROUP_QNAME, OnData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CAPTURE", scope = SubTable.class)
	public JAXBElement<CaptureData> createSubTableCAPTURE(CaptureData value) {
		return new JAXBElement<>(_SubTableCAPTURE_QNAME, CaptureData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "JOB", scope = SubTable.class)
	public JAXBElement<JobData> createSubTableJOB(JobData value) {
		return new JAXBElement<>(_SubTableJOB_QNAME, JobData.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SubTable }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SubTable }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SUB_TABLE", scope = SubTable.class)
	public JAXBElement<SubTable> createSubTableSUBTABLE(SubTable value) {
		return new JAXBElement<>(_SubTableSUBTABLE_QNAME, SubTable.class, SubTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT2", scope = SubFolder.class)
	public JAXBElement<SetVarData> createSubFolderAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_SubTableAUTOEDIT2_QNAME, SetVarData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT", scope = SubFolder.class)
	public JAXBElement<SetVarDataOld> createSubFolderAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_SubTableAUTOEDIT_QNAME, SetVarDataOld.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "VARIABLE", scope = SubFolder.class)
	public JAXBElement<SetVarData> createSubFolderVARIABLE(SetVarData value) {
		return new JAXBElement<>(_SubTableVARIABLE_QNAME, SetVarData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SHOUT", scope = SubFolder.class)
	public JAXBElement<ShoutData> createSubFolderSHOUT(ShoutData value) {
		return new JAXBElement<>(_SubTableSHOUT_QNAME, ShoutData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CONTROL", scope = SubFolder.class)
	public JAXBElement<ControlResourceData> createSubFolderCONTROL(ControlResourceData value) {
		return new JAXBElement<>(_SubTableCONTROL_QNAME, ControlResourceData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "INCOND", scope = SubFolder.class)
	public JAXBElement<InConditionData> createSubFolderINCOND(InConditionData value) {
		return new JAXBElement<>(_SubTableINCOND_QNAME, InConditionData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "QUANTITATIVE", scope = SubFolder.class)
	public JAXBElement<QuantitativeResourceData> createSubFolderQUANTITATIVE(QuantitativeResourceData value) {
		return new JAXBElement<>(_SubTableQUANTITATIVE_QNAME, QuantitativeResourceData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "OUTCOND", scope = SubFolder.class)
	public JAXBElement<OutConditionData> createSubFolderOUTCOND(OutConditionData value) {
		return new JAXBElement<>(_SubTableOUTCOND_QNAME, OutConditionData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "STEP_RANGE", scope = SubFolder.class)
	public JAXBElement<StepRangeData> createSubFolderSTEPRANGE(StepRangeData value) {
		return new JAXBElement<>(_SubTableSTEPRANGE_QNAME, StepRangeData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDAR", scope = SubFolder.class)
	public JAXBElement<RuleBasedCalendar> createSubFolderRULEBASEDCALENDAR(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDAR_QNAME, RuleBasedCalendar.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG", scope = SubFolder.class)
	public JAXBElement<TagData> createSubFolderTAG(TagData value) {
		return new JAXBElement<>(_SubTableTAG_QNAME, TagData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDARS", scope = SubFolder.class)
	public JAXBElement<RuleBasedCalendar> createSubFolderRULEBASEDCALENDARS(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDARS_QNAME, RuleBasedCalendar.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG_NAMES", scope = SubFolder.class)
	public JAXBElement<JobTagData> createSubFolderTAGNAMES(JobTagData value) {
		return new JAXBElement<>(_SubTableTAGNAMES_QNAME, JobTagData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON", scope = SubFolder.class)
	public JAXBElement<OnData> createSubFolderON(OnData value) {
		return new JAXBElement<>(_SubTableON_QNAME, OnData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_TABLE", scope = SubFolder.class)
	public JAXBElement<OnData> createSubFolderONTABLE(OnData value) {
		return new JAXBElement<>(_SubTableONTABLE_QNAME, OnData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_GROUP", scope = SubFolder.class)
	public JAXBElement<OnData> createSubFolderONGROUP(OnData value) {
		return new JAXBElement<>(_SubTableONGROUP_QNAME, OnData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CAPTURE", scope = SubFolder.class)
	public JAXBElement<CaptureData> createSubFolderCAPTURE(CaptureData value) {
		return new JAXBElement<>(_SubTableCAPTURE_QNAME, CaptureData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "JOB", scope = SubFolder.class)
	public JAXBElement<JobData> createSubFolderJOB(JobData value) {
		return new JAXBElement<>(_SubTableJOB_QNAME, JobData.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SubFolder }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SubFolder }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SUB_FOLDER", scope = SubFolder.class)
	public JAXBElement<SubFolder> createSubFolderSUBFOLDER(SubFolder value) {
		return new JAXBElement<>(_SubFolderSUBFOLDER_QNAME, SubFolder.class, SubFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT2", scope = DoForceJobData.class)
	public JAXBElement<SetVarData> createDoForceJobDataAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_SubTableAUTOEDIT2_QNAME, SetVarData.class, DoForceJobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT", scope = DoForceJobData.class)
	public JAXBElement<SetVarDataOld> createDoForceJobDataAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_SubTableAUTOEDIT_QNAME, SetVarDataOld.class, DoForceJobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "VARIABLE", scope = DoForceJobData.class)
	public JAXBElement<SetVarData> createDoForceJobDataVARIABLE(SetVarData value) {
		return new JAXBElement<>(_SubTableVARIABLE_QNAME, SetVarData.class, DoForceJobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DO", scope = OnData.class)
	public JAXBElement<DoActionData> createOnDataDO(DoActionData value) {
		return new JAXBElement<>(_OnDataDO_QNAME, DoActionData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DO_TABLE", scope = OnData.class)
	public JAXBElement<DoActionData> createOnDataDOTABLE(DoActionData value) {
		return new JAXBElement<>(_OnDataDOTABLE_QNAME, DoActionData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DO_GROUP", scope = OnData.class)
	public JAXBElement<DoActionData> createOnDataDOGROUP(DoActionData value) {
		return new JAXBElement<>(_OnDataDOGROUP_QNAME, DoActionData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOACTION", scope = OnData.class)
	public JAXBElement<DoActionData> createOnDataDOACTION(DoActionData value) {
		return new JAXBElement<>(_OnDataDOACTION_QNAME, DoActionData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoActionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ACTION", scope = OnData.class)
	public JAXBElement<DoActionData> createOnDataACTION(DoActionData value) {
		return new JAXBElement<>(_OnDataACTION_QNAME, DoActionData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoCondData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoCondData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOCOND", scope = OnData.class)
	public JAXBElement<DoCondData> createOnDataDOCOND(DoCondData value) {
		return new JAXBElement<>(_OnDataDOCOND_QNAME, DoCondData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoCtbRuleData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoCtbRuleData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOCTBRULE", scope = OnData.class)
	public JAXBElement<DoCtbRuleData> createOnDataDOCTBRULE(DoCtbRuleData value) {
		return new JAXBElement<>(_OnDataDOCTBRULE_QNAME, DoCtbRuleData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoForceJobData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoForceJobData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOFORCEJOB", scope = OnData.class)
	public JAXBElement<DoForceJobData> createOnDataDOFORCEJOB(DoForceJobData value) {
		return new JAXBElement<>(_OnDataDOFORCEJOB_QNAME, DoForceJobData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoIfRerunData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoIfRerunData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOIFRERUN", scope = OnData.class)
	public JAXBElement<DoIfRerunData> createOnDataDOIFRERUN(DoIfRerunData value) {
		return new JAXBElement<>(_OnDataDOIFRERUN_QNAME, DoIfRerunData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoMailData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoMailData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOMAIL", scope = OnData.class)
	public JAXBElement<DoMailData> createOnDataDOMAIL(DoMailData value) {
		return new JAXBElement<>(_OnDataDOMAIL_QNAME, DoMailData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoRemedyData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoRemedyData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOREMEDY", scope = OnData.class)
	public JAXBElement<DoRemedyData> createOnDataDOREMEDY(DoRemedyData value) {
		return new JAXBElement<>(_OnDataDOREMEDY_QNAME, DoRemedyData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOAUTOEDIT2", scope = OnData.class)
	public JAXBElement<SetVarData> createOnDataDOAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_OnDataDOAUTOEDIT2_QNAME, SetVarData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOAUTOEDIT", scope = OnData.class)
	public JAXBElement<SetVarDataOld> createOnDataDOAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_OnDataDOAUTOEDIT_QNAME, SetVarDataOld.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOVARIABLE", scope = OnData.class)
	public JAXBElement<DoSetVarData> createOnDataDOVARIABLE(DoSetVarData value) {
		return new JAXBElement<>(_OnDataDOVARIABLE_QNAME, DoSetVarData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoShoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoShoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOSHOUT", scope = OnData.class)
	public JAXBElement<DoShoutData> createOnDataDOSHOUT(DoShoutData value) {
		return new JAXBElement<>(_OnDataDOSHOUT_QNAME, DoShoutData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoSysoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoSysoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOOUTPUT", scope = OnData.class)
	public JAXBElement<DoSysoutData> createOnDataDOOUTPUT(DoSysoutData value) {
		return new JAXBElement<>(_OnDataDOOUTPUT_QNAME, DoSysoutData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DoSysoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link DoSysoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "DOSYSOUT", scope = OnData.class)
	public JAXBElement<DoSysoutData> createOnDataDOSYSOUT(DoSysoutData value) {
		return new JAXBElement<>(_OnDataDOSYSOUT_QNAME, DoSysoutData.class, OnData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT2", scope = JobData.class)
	public JAXBElement<SetVarData> createJobDataAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_SubTableAUTOEDIT2_QNAME, SetVarData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT", scope = JobData.class)
	public JAXBElement<SetVarDataOld> createJobDataAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_SubTableAUTOEDIT_QNAME, SetVarDataOld.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "VARIABLE", scope = JobData.class)
	public JAXBElement<SetVarData> createJobDataVARIABLE(SetVarData value) {
		return new JAXBElement<>(_SubTableVARIABLE_QNAME, SetVarData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SHOUT", scope = JobData.class)
	public JAXBElement<ShoutData> createJobDataSHOUT(ShoutData value) {
		return new JAXBElement<>(_SubTableSHOUT_QNAME, ShoutData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CONTROL", scope = JobData.class)
	public JAXBElement<ControlResourceData> createJobDataCONTROL(ControlResourceData value) {
		return new JAXBElement<>(_SubTableCONTROL_QNAME, ControlResourceData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "INCOND", scope = JobData.class)
	public JAXBElement<InConditionData> createJobDataINCOND(InConditionData value) {
		return new JAXBElement<>(_SubTableINCOND_QNAME, InConditionData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "QUANTITATIVE", scope = JobData.class)
	public JAXBElement<QuantitativeResourceData> createJobDataQUANTITATIVE(QuantitativeResourceData value) {
		return new JAXBElement<>(_SubTableQUANTITATIVE_QNAME, QuantitativeResourceData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "OUTCOND", scope = JobData.class)
	public JAXBElement<OutConditionData> createJobDataOUTCOND(OutConditionData value) {
		return new JAXBElement<>(_SubTableOUTCOND_QNAME, OutConditionData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "STEP_RANGE", scope = JobData.class)
	public JAXBElement<StepRangeData> createJobDataSTEPRANGE(StepRangeData value) {
		return new JAXBElement<>(_SubTableSTEPRANGE_QNAME, StepRangeData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDAR", scope = JobData.class)
	public JAXBElement<RuleBasedCalendar> createJobDataRULEBASEDCALENDAR(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDAR_QNAME, RuleBasedCalendar.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG", scope = JobData.class)
	public JAXBElement<TagData> createJobDataTAG(TagData value) {
		return new JAXBElement<>(_SubTableTAG_QNAME, TagData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDARS", scope = JobData.class)
	public JAXBElement<RuleBasedCalendar> createJobDataRULEBASEDCALENDARS(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDARS_QNAME, RuleBasedCalendar.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG_NAMES", scope = JobData.class)
	public JAXBElement<JobTagData> createJobDataTAGNAMES(JobTagData value) {
		return new JAXBElement<>(_SubTableTAGNAMES_QNAME, JobTagData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON", scope = JobData.class)
	public JAXBElement<OnData> createJobDataON(OnData value) {
		return new JAXBElement<>(_SubTableON_QNAME, OnData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_TABLE", scope = JobData.class)
	public JAXBElement<OnData> createJobDataONTABLE(OnData value) {
		return new JAXBElement<>(_SubTableONTABLE_QNAME, OnData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_GROUP", scope = JobData.class)
	public JAXBElement<OnData> createJobDataONGROUP(OnData value) {
		return new JAXBElement<>(_SubTableONGROUP_QNAME, OnData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CAPTURE", scope = JobData.class)
	public JAXBElement<CaptureData> createJobDataCAPTURE(CaptureData value) {
		return new JAXBElement<>(_SubTableCAPTURE_QNAME, CaptureData.class, JobData.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SubTable }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SubTable }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SUB_TABLE", scope = SmartTable.class)
	public JAXBElement<SubTable> createSmartTableSUBTABLE(SubTable value) {
		return new JAXBElement<>(_SubTableSUBTABLE_QNAME, SubTable.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "JOB", scope = SmartTable.class)
	public JAXBElement<JobData> createSmartTableJOB(JobData value) {
		return new JAXBElement<>(_SubTableJOB_QNAME, JobData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link FolderClientData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link FolderClientData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ADDITIONAL_FOLDER_DETAILS", scope = SmartTable.class)
	public JAXBElement<FolderClientData> createSmartTableADDITIONALFOLDERDETAILS(FolderClientData value) {
		return new JAXBElement<>(_SmartTableADDITIONALFOLDERDETAILS_QNAME, FolderClientData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT2", scope = SmartTable.class)
	public JAXBElement<SetVarData> createSmartTableAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_SubTableAUTOEDIT2_QNAME, SetVarData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT", scope = SmartTable.class)
	public JAXBElement<SetVarDataOld> createSmartTableAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_SubTableAUTOEDIT_QNAME, SetVarDataOld.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "VARIABLE", scope = SmartTable.class)
	public JAXBElement<SetVarData> createSmartTableVARIABLE(SetVarData value) {
		return new JAXBElement<>(_SubTableVARIABLE_QNAME, SetVarData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SHOUT", scope = SmartTable.class)
	public JAXBElement<ShoutData> createSmartTableSHOUT(ShoutData value) {
		return new JAXBElement<>(_SubTableSHOUT_QNAME, ShoutData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CONTROL", scope = SmartTable.class)
	public JAXBElement<ControlResourceData> createSmartTableCONTROL(ControlResourceData value) {
		return new JAXBElement<>(_SubTableCONTROL_QNAME, ControlResourceData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "INCOND", scope = SmartTable.class)
	public JAXBElement<InConditionData> createSmartTableINCOND(InConditionData value) {
		return new JAXBElement<>(_SubTableINCOND_QNAME, InConditionData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "QUANTITATIVE", scope = SmartTable.class)
	public JAXBElement<QuantitativeResourceData> createSmartTableQUANTITATIVE(QuantitativeResourceData value) {
		return new JAXBElement<>(_SubTableQUANTITATIVE_QNAME, QuantitativeResourceData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "OUTCOND", scope = SmartTable.class)
	public JAXBElement<OutConditionData> createSmartTableOUTCOND(OutConditionData value) {
		return new JAXBElement<>(_SubTableOUTCOND_QNAME, OutConditionData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "STEP_RANGE", scope = SmartTable.class)
	public JAXBElement<StepRangeData> createSmartTableSTEPRANGE(StepRangeData value) {
		return new JAXBElement<>(_SubTableSTEPRANGE_QNAME, StepRangeData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDAR", scope = SmartTable.class)
	public JAXBElement<RuleBasedCalendar> createSmartTableRULEBASEDCALENDAR(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDAR_QNAME, RuleBasedCalendar.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG", scope = SmartTable.class)
	public JAXBElement<TagData> createSmartTableTAG(TagData value) {
		return new JAXBElement<>(_SubTableTAG_QNAME, TagData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDARS", scope = SmartTable.class)
	public JAXBElement<RuleBasedCalendar> createSmartTableRULEBASEDCALENDARS(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDARS_QNAME, RuleBasedCalendar.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG_NAMES", scope = SmartTable.class)
	public JAXBElement<JobTagData> createSmartTableTAGNAMES(JobTagData value) {
		return new JAXBElement<>(_SubTableTAGNAMES_QNAME, JobTagData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON", scope = SmartTable.class)
	public JAXBElement<OnData> createSmartTableON(OnData value) {
		return new JAXBElement<>(_SubTableON_QNAME, OnData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_TABLE", scope = SmartTable.class)
	public JAXBElement<OnData> createSmartTableONTABLE(OnData value) {
		return new JAXBElement<>(_SubTableONTABLE_QNAME, OnData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_GROUP", scope = SmartTable.class)
	public JAXBElement<OnData> createSmartTableONGROUP(OnData value) {
		return new JAXBElement<>(_SubTableONGROUP_QNAME, OnData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CAPTURE", scope = SmartTable.class)
	public JAXBElement<CaptureData> createSmartTableCAPTURE(CaptureData value) {
		return new JAXBElement<>(_SubTableCAPTURE_QNAME, CaptureData.class, SmartTable.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SubFolder }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SubFolder }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SUB_FOLDER", scope = SmartFolder.class)
	public JAXBElement<SubFolder> createSmartFolderSUBFOLDER(SubFolder value) {
		return new JAXBElement<>(_SubFolderSUBFOLDER_QNAME, SubFolder.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "JOB", scope = SmartFolder.class)
	public JAXBElement<JobData> createSmartFolderJOB(JobData value) {
		return new JAXBElement<>(_SubTableJOB_QNAME, JobData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link FolderClientData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link FolderClientData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ADDITIONAL_FOLDER_DETAILS", scope = SmartFolder.class)
	public JAXBElement<FolderClientData> createSmartFolderADDITIONALFOLDERDETAILS(FolderClientData value) {
		return new JAXBElement<>(_SmartTableADDITIONALFOLDERDETAILS_QNAME, FolderClientData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT2", scope = SmartFolder.class)
	public JAXBElement<SetVarData> createSmartFolderAUTOEDIT2(SetVarData value) {
		return new JAXBElement<>(_SubTableAUTOEDIT2_QNAME, SetVarData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarDataOld }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "AUTOEDIT", scope = SmartFolder.class)
	public JAXBElement<SetVarDataOld> createSmartFolderAUTOEDIT(SetVarDataOld value) {
		return new JAXBElement<>(_SubTableAUTOEDIT_QNAME, SetVarDataOld.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link SetVarData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "VARIABLE", scope = SmartFolder.class)
	public JAXBElement<SetVarData> createSmartFolderVARIABLE(SetVarData value) {
		return new JAXBElement<>(_SubTableVARIABLE_QNAME, SetVarData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ShoutData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "SHOUT", scope = SmartFolder.class)
	public JAXBElement<ShoutData> createSmartFolderSHOUT(ShoutData value) {
		return new JAXBElement<>(_SubTableSHOUT_QNAME, ShoutData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link ControlResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CONTROL", scope = SmartFolder.class)
	public JAXBElement<ControlResourceData> createSmartFolderCONTROL(ControlResourceData value) {
		return new JAXBElement<>(_SubTableCONTROL_QNAME, ControlResourceData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link InConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "INCOND", scope = SmartFolder.class)
	public JAXBElement<InConditionData> createSmartFolderINCOND(InConditionData value) {
		return new JAXBElement<>(_SubTableINCOND_QNAME, InConditionData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link QuantitativeResourceData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "QUANTITATIVE", scope = SmartFolder.class)
	public JAXBElement<QuantitativeResourceData> createSmartFolderQUANTITATIVE(QuantitativeResourceData value) {
		return new JAXBElement<>(_SubTableQUANTITATIVE_QNAME, QuantitativeResourceData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OutConditionData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "OUTCOND", scope = SmartFolder.class)
	public JAXBElement<OutConditionData> createSmartFolderOUTCOND(OutConditionData value) {
		return new JAXBElement<>(_SubTableOUTCOND_QNAME, OutConditionData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link StepRangeData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "STEP_RANGE", scope = SmartFolder.class)
	public JAXBElement<StepRangeData> createSmartFolderSTEPRANGE(StepRangeData value) {
		return new JAXBElement<>(_SubTableSTEPRANGE_QNAME, StepRangeData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDAR", scope = SmartFolder.class)
	public JAXBElement<RuleBasedCalendar> createSmartFolderRULEBASEDCALENDAR(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDAR_QNAME, RuleBasedCalendar.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link TagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG", scope = SmartFolder.class)
	public JAXBElement<TagData> createSmartFolderTAG(TagData value) {
		return new JAXBElement<>(_SubTableTAG_QNAME, TagData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "RULE_BASED_CALENDARS", scope = SmartFolder.class)
	public JAXBElement<RuleBasedCalendar> createSmartFolderRULEBASEDCALENDARS(RuleBasedCalendar value) {
		return new JAXBElement<>(_SubTableRULEBASEDCALENDARS_QNAME, RuleBasedCalendar.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobTagData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "TAG_NAMES", scope = SmartFolder.class)
	public JAXBElement<JobTagData> createSmartFolderTAGNAMES(JobTagData value) {
		return new JAXBElement<>(_SubTableTAGNAMES_QNAME, JobTagData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON", scope = SmartFolder.class)
	public JAXBElement<OnData> createSmartFolderON(OnData value) {
		return new JAXBElement<>(_SubTableON_QNAME, OnData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_TABLE", scope = SmartFolder.class)
	public JAXBElement<OnData> createSmartFolderONTABLE(OnData value) {
		return new JAXBElement<>(_SubTableONTABLE_QNAME, OnData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link OnData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ON_GROUP", scope = SmartFolder.class)
	public JAXBElement<OnData> createSmartFolderONGROUP(OnData value) {
		return new JAXBElement<>(_SubTableONGROUP_QNAME, OnData.class, SmartFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link CaptureData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "CAPTURE", scope = SmartFolder.class)
	public JAXBElement<CaptureData> createSmartFolderCAPTURE(CaptureData value) {
		return new JAXBElement<>(_SubTableCAPTURE_QNAME, CaptureData.class, SmartFolder.class, value);
	}

	/*
	 * Brian Hayes - Added this to make Simplefolder return data be the same as smart and other folder types.
	 */
	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link JobData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "JOB", scope = SimpleFolder.class)
	public JAXBElement<JobData> createSimpleFolderJOB(JobData value) {
		return new JAXBElement<>(_SubTableJOB_QNAME, JobData.class, SimpleFolder.class, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link FolderClientData }{@code >}
	 *
	 * @param value
	 *              Java instance representing xml element's value.
	 * @return
	 *         the new instance of {@link JAXBElement }{@code <}{@link FolderClientData }{@code >}
	 */
	@XmlElementDecl(namespace = "", name = "ADDITIONAL_FOLDER_DETAILS", scope = SimpleFolder.class)
	public JAXBElement<FolderClientData> createSimpleTableADDITIONALFOLDERDETAILS(FolderClientData value) {
		return new JAXBElement<>(_SmartTableADDITIONALFOLDERDETAILS_QNAME, FolderClientData.class, SimpleFolder.class, value);
	}
}
