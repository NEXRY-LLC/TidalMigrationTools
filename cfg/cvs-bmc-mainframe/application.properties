bmc.path = ./cfg/cvs-bmc-mainframe/MTSMXL/cvs-full-mainfram.xml


## What data are we working with?
MigrationDataType=BMC


BMC.GlobalVariablePrefixes=GBL.

## If you need to skip dep setup set this. 
BMC.IncludeConditions=true

## Conoco needs this.
BMC.GroupByDataCenter=true

## Need to talk to tidal about the control resources as this is not in tidal. This is like saying this job has a control resource on it and if it fails, that resource can be locked
## Wondering if this would be the skip if not completed on the job options.

## Quanitative resources are just like TIDAL V resources so if the customer wants to include this simply set to true
BMC.IncludeQuantiativeResources=true
#BMC.QuantiativeResourcePrefix=QNT_
BMC.QuantiativeResourcesCount=99

## Optionally any control resources can also be included as this concept is not the same in tidal but tidal v resources
## behave the same. 
BMC.IncludeControlResources=true
## They are the same in TIDAl as a quanitive resource behavior wise but are different in BMC, Prefix them to see a difference
BMC.ControlResourcePrefix=CNTL_
## THe general rule of thumb is to match what the behavior is in BMC
## In BMC you can set a CR to not release which in effect makes any future jobs unable to run but in TIDAL
## VR's release no matter what.. Need to look at this. 
BMC.ControlResourceCount=1


## Generic creation of email actions in a crud way. It adds the unique ones joining all the data elements from the xml
BMC.IncludeEmailActions=true


## Process Pre and Post Jobs as CLI jobs in TIDAL , making the pre command match deps of the job and job dependent on pre and post on actual
BMC.ProcessPreAndPostData=true


## In BMC you can have the same node name but points to a different connection as its based on type too in BMC
## TIDAL however does not.. The solution is to append the jobtype to the node name and then map those back or keep this name
## In your tidal environment. 
BMC.AppendJobTypeToAgentName=true


# Who should own objects if not set
TIDAL.DefaultOwner=CVS-WRG

#TIDAL.CalendarPrefix=STUB_


TIDAL.MapAgentListDataFile=./cfg/cvs-bmc-mainframe/AgentListMapping.txt
TIDAL.MapVariableDataFile=./cfg/cvs-bmc-mainframe/VariableMapping.txt
TIDAL.MapCalendarDataFile=./cfg/cvs-bmc-mainframe/CalendarMapping.txt
TIDAL.MapAgentDataFile=./cfg/cvs-bmc-mainframe/AgentMapping.txt

## Mapping now supports user@domain , user@otherdomain, etc. mapping logic or user without domain
#TIDAL.MapRunTimeUsers=

TIDAL.VariableDataFile=./cfg/cvs-bmc-mainframe/variable_data.txt

# When processing data from another system, you may run into the same node name on different job types
# Setting this will allow you to have agent-OS, agent-SAP for names.
# Default is false
tidal.agent.appendjobtype=false

tidal.add.agents.on.import=true


# MAXWAIT="07" - Means to let the job stay in the schedule for this many days if it fails.