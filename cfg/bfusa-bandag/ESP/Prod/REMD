APPL REMD JOB_ANCESTOR_WAIT WAIT

/* *************************************************************** */
/* CHANGE LOG                                                      */
/* *************************************************************** */
/* 12SEP2013 - RKP - COPIED FROM SYS5 APPL.PROCLIB                 */
/*                                                                 */
/* 29JUL2013 - RKP - CHANGE TO PUT APPL DETAILS INTO NOTES         */
/*                                                                 */
/* 26JUL2013 - RKP - CHANGE TO USE FULL NAME FOR ALL JOBS          */
/*                                                                 */
/* 03APR2013 - RKP - COMMENT OUT SWESPREN AND CHANGE JCL FOR       */
/*                   SWESPREM TO USE NEW REMEDY                    */
/*                                                                 */
/* 30JUL2008 - RKP - ADD QUALIFIER TO JOB NAME FOR BOTH SYMBOLICS  */
/*                   AND CHECKING FIELDS                           */
/*                                                                 */
/* *************************************************************** */
/*                                                                 */
/* THE FOLLOWING ARE SOME REMEDY FIELDS WHICH WILL BE POPULATED    */
/* BY THE GENERATED EMAIL.                                         */
/*                                                                 */
/* !1000000000! : THIS IS THE SUMMARY FIELD.                       */
/*                (IT CANNOT CONTINUE TO A SECOND LINE.)           */
/* !1000000151! : THIS IS THE NOTES FIELD.                         */
/*                (IT CAN BE CONTINUED TO MULTIPLE LINES BY USING  */
/*                 THE [$$ AND $$] CHARACTERS AS DESCRIBED BELOW.) */
/* !Z1D_DETAILS! : [$$THIS IS THE WORK DETAIL ENTRY.  IT CAN BE    */
/*                 CONTINUED TO MULTIPLE LINES BY USING '[$$' TO   */
/*                 START THE ENTRY & '$$]' TO CLOSE THE ENTRY.$$]  */
/* !Z1D_WORKLOGDETAILS! : THIS IS THE NAME OF THE WORK DETAIL      */
/*                        ENTRY.                                   */
/*                                                                 */
/* *************************************************************** */


JCLLIB 'BANDAG.MVS.JCLLIB'
COPYJCL 'SYS3.ESP.COPYLIB'
TEMPLIB 'SYS3.ESP.TEMPLIB'
DOCLIB 'SYS3.ESP.DOCLIB'

IF !ESPAPSUB# > 1 THEN JCLLIB 'SYS3.ESP.COPYLIB'

OPTIONS RESTARTSTEP

/* ------------------------------------------------------------- */

GOOD_QUAL = 'Y'

REXXON GEN PROC  /* TURN ON REXX  */

GOOD_QUAL = 'Y'
IN_QUAL = CLANGVAR('!MNQUAL')
IF SUBSTR(IN_QUAL,1,1) = '~' THEN
  DO
    GOOD_QUAL = 'N'
  END

"GOOD_QUAL='"GOOD_QUAL"'"

REXXOFF          /* TURN OFF REXX  */

IF !GOOD_QUAL = 'N' THEN -
  DO
    REM_SYMBOLIC_1A='JOB !MNFULLNAME'
    REM_SYMBOLIC_1B='A JOB IN APPL !MNAPPL FAILED WITH CC !MNCMPC..'
    REM_SYMBOLIC_2A='JOB !MNFULLNAME'
  ENDDO
ELSE -
  DO
    REM_SYMBOLIC_1A='JOB !MNFULLNAME..!MNQUAL'
    REM_SYMBOLIC_1B='A JOB IN APPL !MNAPPL FAILED WITH CC !MNCMPC..'
    REM_SYMBOLIC_2A='JOB !MNFULLNAME..!MNQUAL'
  ENDDO

REM_SYMBOLIC_2B='IN APPL !MNAPPL GEN# !MNAPPLGEN HAS FAILED.'

IF !MNAGENT = '' THEN -
  DO
    REM_SYMBOLIC_3='THE JES JOB# IS !MNJOBNO WHICH'
    REM_SYMBOLIC_4='STARTED AT !MNJSTART..'
    REM_SYMBOLIC_5='THIS IS A Z/OS JOB WHICH RAN ON SYSTEM !MNSYS..'
  ENDDO
ELSE -
  DO
    REM_SYMBOLIC_3='THE JOB# IS !MNJOBNO WHICH'
    REM_SYMBOLIC_4='STARTED AT !MNJSTART..'
    REM_SYMBOLIC_5='THE AGENT IS !MNAGENT..'
  ENDDO

REM_SYMBOLIC_6='!MNFULLNAME'

REM_EXMK='!'


DOIT = '?'

REXXON GEN       /* TURN ON REXX  */

DOIT = '?'
IN_APPL = CLANGVAR('!MNAPPL')
IN_APPLGEN = CLANGVAR('!MNAPPLGEN')
IN_JOB = CLANGVAR('!MNJOB')
IN_QUAL = CLANGVAR('!MNQUAL')
/* ADD THE QUALIFIER IF IT IS THERE  */
IF IN_QUAL = ''  THEN
  DO
    IN_JOBQUAL = IN_JOB
  END
ELSE
  DO
    IN_JOBQUAL = IN_JOB || '.' || IN_QUAL
  END
IN_TAG = CLANGVAR('!MNTAG')

IF SUBSTR(IN_TAG,3,4) = 'XXXX' THEN   /* IF XXTEST IN MNTAG, THEN */
  DO                                  /*    NO TICKET             */
    DOIT = 'TAG_SAYS_NO'
    SIGNAL ALL_DONE
  END


/* BUILD LAP COMMAND */

LAP_COMMAND = 'ESP LAP' IN_APPL || '.' || IN_APPLGEN 'ALL'

/* TRAP OUTPUT FROM LAP COMMAND     */

X=TRAPOUT('HOLD.')

""LAP_COMMAND""

X=TRAPOUT('OFF')


/* DISPLAY LAP OUTPUT FOR ROY          */
/* SAY 'HOLD.0 IS' HOLD.0              */
/* DO X=1 TO HOLD.0                    */
/*   SAY 'HOLD.'||X|| ' IS' HOLD.X     */
/* END                                 */
/* DISPLAY LAP OUTPUT FOR ROY          */


/* PARSE LINE 1 AND SEE IF THE LAP COMMAND WORKED */

PARSE VAR HOLD.1 LAP_APPLCON LAP_APPL LAP_GENCON LAP_GEN THE_REST

IF LAP_APPLCON  \= 'APPL'     |,
  LAP_APPL      \= IN_APPL    |,
  LAP_GENCON    \= 'GEN'      |,
  LAP_GEN       \= IN_APPLGEN THEN
  DO
    DOIT = 'YES'
    SIGNAL ALL_DONE
  END

/* LOOK FOR THE JOB IN QUESTION */

DO I = 2
  IF HOLD.I = '' THEN                    /* IF NULL LINE THEN     */
    DO                                   /*    SKIP IT            */
      ITERATE
    END
  IF SUBSTR(HOLD.I,1,5) = '-----' THEN   /* IF END OF OUTPUT THEN */
    DO                                   /*    MAKE A TICKET      */
      /* SAY 'NOT FOUND IN LOOP1'            TEST MESSAGE FOR ROY */
      DOIT = 'YES'
      SIGNAL ALL_DONE
    END
  IF SUBSTR(HOLD.I,1,2) = '  ' THEN
    DO
      PARSE VAR HOLD.I LAP_1 THE_REST
      IF LAP_1 = IN_JOBQUAL THEN
        DO
          /* SAY 'GOING TO FOUND_IN_JOB'     TEST MESSAGE FOR ROY */
          J = I + 1
          SIGNAL FOUND_IN_JOB
        END
    END
END


FOUND_IN_JOB:

DO I = J
  IF HOLD.I = '' THEN                 /* IF NULL LINE THEN     */
    DO                                /*    SKIP IT            */
      ITERATE
    END
  IF SUBSTR(HOLD.I,1,5) = '-----' |,  /* IF END OF OUTPUT OR   */
     SUBSTR(HOLD.I,3,1) \= ' ' THEN   /*    NEXT JOB THEN      */
    DO                                /*    MAKE A TICKET      */
      /* SAY 'NOT FOUND IN LOOP2'         TEST MESSAGE FOR ROY */
      DOIT = 'YES'
      SIGNAL ALL_DONE
    END
  PARSE VAR HOLD.I LAP_1 LAP_2 THE_REST
  IF LAP_1 = 'RERUN' & LAP_2 = 'OF:' THEN  /* IF RERUN THEN     */
    DO                                     /*    NO TICKET      */
      /* SAY 'GOT A RERUN'                 TEST MESSAGE FOR ROY */
      DOIT = 'NO'
      SIGNAL ALL_DONE
    END
END

ALL_DONE:

"DOIT='"DOIT"'"

REXXOFF                     /* TURN OFF REXX */


/* ------------------------------------------------------------- */

/*  TEST MESSAGES FOR ROY               */
/*  IF !ESP_APPL_GEN = 1 THEN           */
/*    DO                                */
/*                                      */
/*      SEND 'SEND MESSAGES FOR ROY'    */
/*      SEND 'DOIT IS !DOIT'            */
/*      SEND 'MNJOB IS !MNJOB'          */
/*      SEND 'MNQUAL IS !MNQUAL'        */
/*      SEND 'MNAPPL IS !MNAPPL'        */
/*      SEND 'GOOD_QUAL IS !GOOD_QUAL'  */
/*      SEND 'MNFULLNAME IS !MNFULLNAME' */
/*    ENDDO                             */
/*  TEST MESSAGES FOR ROY               */

JOB SWESPREM
  IF !DOIT = 'YES' THEN RUN NOW
ENDJOB

/*  JOB SWESPREN                        */
/*    IF !DOIT = 'YES' THEN RUN NOW     */
/*  ENDJOB                              */

